#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–µ–±–∞–≥–∞ –ø–æ–ª–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./test_debug_example.sh [document_id]

set -e

DOCUMENT_ID=${1:-29}
LOG_FILE="storage/logs/debug_generation.log"

echo "üîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–°–¢–†–£–ú–ï–ù–¢–û–í –î–ï–ë–ê–ì–ê"
echo "===================================="
echo "–î–æ–∫—É–º–µ–Ω—Ç ID: $DOCUMENT_ID"
echo "–õ–æ–≥ —Ñ–∞–π–ª: $LOG_FILE"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è
print_separator() {
    echo ""
    echo "------------------------------------"
    echo "$1"
    echo "------------------------------------"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
check_document() {
    print_separator "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ #$DOCUMENT_ID"
    
    if php artisan tinker --execute="
        \$doc = App\\Models\\Document::find($DOCUMENT_ID);
        if (\$doc) {
            echo '–î–æ–∫—É–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω: ' . \$doc->title . PHP_EOL;
            echo '–°—Ç–∞—Ç—É—Å: ' . \$doc->status->value . PHP_EOL;
            echo 'Thread ID: ' . (\$doc->thread_id ?: '–ù–ï–¢') . PHP_EOL;
            echo '–°—Ç—Ä—É–∫—Ç—É—Ä–∞: ' . (!empty(\$doc->structure) ? '–ï–°–¢–¨' : '–ù–ï–¢') . PHP_EOL;
        } else {
            echo '–î–æ–∫—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!' . PHP_EOL;
            exit(1);
        }
    "; then
        echo "‚úÖ –î–æ–∫—É–º–µ–Ω—Ç –≥–æ—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞
quick_test() {
    print_separator "‚ö° –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –æ–¥–Ω–æ–≥–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–∞"
    
    echo "–ó–∞–ø—É—Å–∫–∞–µ–º –±—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ thread..."
    if php artisan debug:single-subtopic $DOCUMENT_ID --create-new-thread; then
        echo "‚úÖ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        echo "‚ùå –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–æ–π"
        echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥ —Ñ–∞–π–ª: $LOG_FILE"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ thread
monitor_thread() {
    print_separator "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ thread (–µ—Å–ª–∏ –µ—Å—Ç—å)"
    
    THREAD_ID=$(php artisan tinker --execute="
        \$doc = App\\Models\\Document::find($DOCUMENT_ID);
        echo \$doc->thread_id ?: '';
    ")
    
    if [[ -n "$THREAD_ID" ]]; then
        echo "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ thread: $THREAD_ID"
        echo "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 30 —Å–µ–∫—É–Ω–¥, –∏–Ω—Ç–µ—Ä–≤–∞–ª: 5 —Å–µ–∫—É–Ω–¥"
        
        if php artisan debug:thread-monitor $THREAD_ID --duration=30 --interval=5; then
            echo "‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω"
        else
            echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ"
        fi
    else
        echo "üî∂ Thread –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
full_generation_test() {
    print_separator "üöÄ –ü–æ–ª–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è (–û–°–¢–û–†–û–ñ–ù–û!)"
    
    echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ü–æ–ª–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å —Ç–æ–∫–µ–Ω—ã!"
    echo "–•–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é? (y/N)"
    
    read -r response
    if [[ "$response" =~ ^[Yy]$ ]]; then
        echo "–ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º..."
        
        if php artisan debug:full-generation $DOCUMENT_ID; then
            echo "‚úÖ –ü–æ–ª–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
        else
            echo "‚ùå –ü–æ–ª–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–æ–π"
            echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥ —Ñ–∞–π–ª: $LOG_FILE"
        fi
    else
        echo "üî∂ –ü–æ–ª–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ª–æ–≥–æ–≤
analyze_logs() {
    print_separator "üìÑ –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤"
    
    if [[ -f "$LOG_FILE" ]]; then
        echo "–†–∞–∑–º–µ—Ä –ª–æ–≥ —Ñ–∞–π–ª–∞: $(du -h $LOG_FILE | cut -f1)"
        echo ""
        echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø–∏—Å–µ–π:"
        tail -n 10 "$LOG_FILE"
        echo ""
        echo "–ü–æ–∏—Å–∫ –æ—à–∏–±–æ–∫:"
        grep -i "error\|–æ—à–∏–±–∫–∞" "$LOG_FILE" | tail -n 5 || echo "–û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
        echo ""
        echo "–ü–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö run:"
        grep -i "–∞–∫—Ç–∏–≤–Ω—ã–µ run\|active run" "$LOG_FILE" | tail -n 5 || echo "–ê–∫—Ç–∏–≤–Ω—ã—Ö run –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    else
        echo "‚ùå –õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $LOG_FILE"
    fi
}

# –û—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
main() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
    check_document
    
    # –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç
    quick_test
    
    # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ thread
    monitor_thread
    
    # –ü–æ–ª–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    full_generation_test
    
    # –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤
    analyze_logs
    
    print_separator "üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
    echo "üìÑ –ü–æ–ª–Ω—ã–µ –ª–æ–≥–∏: $LOG_FILE"
    echo "üìä –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞:"
    echo "   tail -f $LOG_FILE"
    echo "   grep 'thread_' $LOG_FILE"
    echo "   grep -i 'error' $LOG_FILE"
    echo ""
    echo "üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "   php artisan debug:single-subtopic $DOCUMENT_ID"
    echo "   php artisan debug:thread-monitor [thread_id]"
    echo "   php artisan debug:full-generation $DOCUMENT_ID"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@" 