<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use App\Models\User;
use App\Enums\UserRole;

class ListAdmins extends Command
{
    /**
     * The name and signature of the console command.
     */
    protected $signature = 'admin:list';

    /**
     * The console command description.
     */
    protected $description = '–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤';

    /**
     * Execute the console command.
     */
    public function handle()
    {
        $admins = User::where('role_id', UserRole::ADMIN)->get();

        if ($admins->isEmpty()) {
            $this->warn('‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            $this->info('üí° –°–æ–∑–¥–∞–π—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∫–æ–º–∞–Ω–¥–æ–π:');
            $this->info('   php artisan admin:make-user admin@example.com --create');
            return 0;
        }

        $this->info("üëë –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ ({$admins->count()}):");
        
        $tableData = $admins->map(function ($admin) {
            return [
                $admin->id,
                $admin->name,
                $admin->email,
                $admin->status ? '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' : '‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω',
                $admin->balance_rub . ' ‚ÇΩ',
                $admin->created_at->format('d.m.Y H:i'),
                $admin->telegram_id ? '‚úÖ' : '‚ùå'
            ];
        })->toArray();

        $this->table(
            ['ID', '–ò–º—è', 'Email', '–°—Ç–∞—Ç—É—Å', '–ë–∞–ª–∞–Ω—Å', '–°–æ–∑–¥–∞–Ω', 'Telegram'],
            $tableData
        );

        return 0;
    }
} 